.. _android:

=======
Android
=======

Ren'Py поддерживает устройства, работающие на операционной системе Android, 
такие как смартфоны и планшеты. 
Хотя эти устройства не поддерживают 100% функциональности Ren'Py, 
с минимальными изменениями визуальные новеллы можно упаковать и перенести на эти устройства.

RAPT – инструмент упаковки Ren'Py для Android – это программа, загружаемая отдельно  
от Ren'Py, которая создает Android-пакет для тестирования или выпуска.

Ren'Py работает на Android 5.0 и более поздних версиях, 
хотя у более старых устройств могут не быть ресурсов 
для правильной работы крупных игр.

Необходимый текст
=================

Некоторые из библиотек, используемых RAPT, лицензированы на условиях 
GNU Lesser/Library General Public License. Вам нужно будет соблюдать 
условия этой лицензии для распространения Ren'Py. Мы считаем, что 
добавление следующего текста в описание вашего приложения будет 
достаточным, но рекомендуется проконсультироваться с юристом, чтобы быть уверенным.

    Эта программа содержит свободное ПО, лицензированное по нескольким лицензиям,  
    включая GNU Lesser General Public License. Полный список программного обеспечения  
    доступен на https://www.renpy.org/l/license/.
=================

Когда игра Ren'Py запущена на Android, следующие клавиши работают:

`Домой`  
    Возвращает на главный экран Android, приостанавливая игру Ren'Py. 
    В процессе приостановки Ren'Py автоматически сохраняет игру. 
    Если необходимо, сохранение будет автоматически загружено при возвращении пользователя в игру.

`Увеличение громкости`, `Уменьшение громкости`  
    Управляют медиагромкостью Android.


.. _android-platform-differences:

Различия платформ
====================

Существует множество важных различий между платформой Android, 
основанной на сенсорном экране, и платформами, использующими мышь, 
которые поддерживает Ren'Py. Изменения, вызванные программным обеспечением 
и аппаратным обеспечением Android, следующие:

* Сенсорный экран обрабатывается как мышь. Однако он будет генерировать 
события мыши только тогда, когда пользователь активно касается экрана.

* Ввод текста (например, с помощью :func:`renpy.input`) ограничен методами ввода, 
которые не требуют завершений для работы. (Западные языки, вероятно, работают, 
в то время как другие языки могут не поддерживаться.)

Кроме того, могут потребоваться несколько изменений, связанные с особенностями использования:

* Поскольку смартфоны на Android могут быть меньше компьютерных мониторов, 
возможно, потребуется увеличить размер текста.

* Поскольку сенсорный ввод менее точен, чем ввод с помощью мыши, 
кнопки, управляемые с помощью сенсорного экрана, должны быть больше, чем кнопки для ввода с мышью.

Для того чтобы помочь вам адаптироваться к этим различиям, 
Ren'Py для Android автоматически выбирает варианты экранов в зависимости от размера и возможностей экрана устройства. 
Подробнее см. в разделе :ref:`screen-variants`.

Из-за политики безопасности мобильных устройств функциональность 
MultiPersistent ограничена только этой игрой и её обновлениями, т.е. она не может быть использована в другой игре.


**Тестирование и эмуляция**  
=====================

Для целей тестирования Ren'Py поддерживает три режима эмуляции Android. 
Эти режимы доступны на экране Android в лаунчере.

**Телефон**  
    Этот режим эмулирует Android-смартфон. 
    Эмуляция касаний выполняется с помощью мыши, 
    но только когда кнопка мыши нажата. 
    Клавиша Escape соответствует кнопке меню, а Page Up — кнопке "Назад".

**Планшет**  
    Этот режим эмулирует Android-планшет. 
    Эмуляция касаний выполняется с помощью мыши, 
    но только когда кнопка мыши нажата. 
    Клавиша Esc соответствует кнопке меню, а Page Up — кнопке "Назад".

**Телевизор**  
    Этот режим эмулирует Android-устройство для телевизора. 
    Клавиатура отображает действия, которые можно выполнять с пульта или контроллера, 
    при этом стрелки используются для навигации. 
    Клавиша "Enter" соответствует кнопке "Выбрать", 
    клавиша Esc — меню, а Page Up — кнопке "Назад".

    Этот режим также отображает наложение, 
    показывающее "небезопасную" зону для телевизора. 
    Контент, находящийся в этой зоне, 
    может не отображаться на всех телевизорах.

Хотя эти эмуляторы можно использовать для быстрого тестирования вашего проекта, 
лучше проводить тестирование на реальном оборудовании. 
Эмуляторы не решают некоторые проблемы, связанные с человеческим фактором, такие как размер пальцев пользователя.


.. highlight:: none

.. _android-building:

Создание Android-приложений
=============================

Ren'Py содержит инструменты, которые помогут вам использовать упаковочный подход к разработке Android-игр. В этом подходе вы будете использовать ПК для создания Android-пакета и загрузки его на ваше устройство. Затем вы сможете запустить игру как любое Android-приложение. Когда все будет работать корректно, вы можете загрузить созданный пакет в Google Play и другие магазины приложений.

Создание Android-приложения состоит из четырех шагов:

1. Скачайте и установите Java Development Kit и драйвера Android USB (ссылки приведены ниже).

2. Используйте лаунчер для установки Android SDK.

3. Используйте лаунчер для генерации ключей.

4. Используйте лаунчер для настройки сборки для Android.

5. Используйте лаунчер для создания Android-приложения.

После выполнения этих шагов у вас будет готовый для запуска Android-пакет. Шаг 3 нужно выполнять только тогда, когда вы решите внести изменения в конфигурацию игры или когда настраиваете новую игру; шаг 4 нужно выполнять чаще всего, когда вам нужно создать новый билд игры.

---

Шаг 1: Установка зависимостей
-----------------------------------

Есть три вещи, которые вам нужно будет скачать и установить вручную, прежде чем вы сможете создавать пакеты:

**Java Development Kit.**  
Java Development Kit (JDK) содержит несколько инструментов, 
которые используются RAPT, включая инструменты для генерации ключей 
и подписи пакетов. Его можно скачать по следующим ссылкам:

    https://adoptopenjdk.net/releases.html  
    https://adoptium.net/temurin/releases/?version=21

Вам потребуется версия 21 JDK.

Обратите внимание, что JDK, предназначенный для разработчиков, отличается от JRE, предназначенного для пользователей, и вам нужен именно JDK для создания Android-пакетов.


**Android-устройство.**  
Также вам нужно будет настроить ваше устройство для разработки. Включите режим разработчика на вашем устройстве и настройте компьютер для Android-разработки. Инструкции по настройке компьютера можно найти здесь:

    https://developer.android.com/studio/run/device

Вы также можете запустить ваше приложение в образе x86_64 на Android-эмуляторе (обратите внимание, что x86 не поддерживается). Настройка эмулятора выходит за рамки этого документа.

---

**Шаг 2: Настройка Android SDK и окружения разработки**  
----------------------------------------------------------

Следующий шаг — настроить Android SDK и остальную часть вашего окружения для разработки. Этот шаг выполнит следующие действия:

* Проверит, что JDK установлен правильно.
* Установит Android SDK.
* Использует Android SDK для установки соответствующих пакетов для разработки.

Для выполнения этого шага требуется доступ в Интернет.

Для выполнения шага выберите "Install SDK" на экране Android в лаунчере Ren'Py. RAPT будет сообщать, что он делает. Он также предложит вам принять лицензии.

Если вы не хотите скачивать SDK каждый раз, вы можете создать файл с именем sdk.txt, содержащий одну строку с путем к уже установленному SDK.

---

**Шаг 3: Генерация ключей**  
---------------------

После этого выберите "Генерировать ключи" для генерации Android и Bundle ключей для вашего пакета.

.. warning::

    Ключи, сгенерированные с помощью RAPT, создаются со стандартной фразой-паролем. Вы должны убедиться, что не потеряете доступ к этим файлам.

    Храните файлы android.keystore и bundle.keystore в безопасном месте. Также создайте их резервную копию, так как без ключа вы не сможете загрузить сгенерированные приложения.

    Убедитесь, что эти файлы никогда не становятся публичными, особенно если используется система контроля версий.

При создании Android-ключей Ren'Py будет делать их резервные копии в том же месте, где он сохраняет файлы сценариев. Однако это не заменяет создание ваших собственных резервных копий.

---

**Шаг 4: Настройка вашей игры**  
---------------------------

Прежде чем создавать пакет, вам нужно предоставить Ren'Py информацию о сборке Android-версии вашей игры. Для этого выберите "Настроить" на экране Android лаунчера Ren'Py.

Если вам нужно изменить информацию, вы можете повторно выполнить команду настройки. Ваши предыдущие выборы будут сохранены.

---

**Шаг 5: Создание и установка пакета**  
-------------------------------------

Наконец, вы можете создать и установить пакет. Сначала выберите один из двух режимов выпуска:

**Play Bundle**  
    Релизы Play Bundle находятся в формате Android App Bundle (AAB) и 
    подходят только для загрузки в Google Play, 
    хотя такие релизы также могут быть установлены на устройствах с поддержкой Play.

    Play Bundle может быть размером до 2 ГБ, но это разделяется на 4 пакета по 500 МБ, 
    причем каждый файл вашей игры присваивается одному из четырех пакетов. 
    Это может стать проблемой, если файлов больше четырех — игра не сможет уместить 5 файлов по 300 МБ, 
    так как для каждого пакета будет место только для одного файла.

**Универсальный APK**  
    Релизы Универсального APK подходят для прямой установки на устройства Android через Ren'Py, 
    ADB, сторонние магазины приложений или установку через веб.

    Универсальный APK может быть размером до 2 ГБ, без ограничений по содержимому.

Есть три команды, которые позволяют вам выполнять различные комбинации создания пакета, 
установки его на устройство и запуска приложения для тестирования.

Возможно, вам нужно будет удалить приложение при переключении между режимами выпуска.


Очень большие игры
================

Создание игр размером более 2 ГБ возможно. 
Это достигается с использованием :doc:`downloader`, 
где небольшая часть игры включается в пакет Play или универсальный APK, 
а остальная часть игры загружается с веб-сервера, способного обрабатывать такие запросы.


Иконки и изображения Presplash
=========================

Иконки
-----
Ren'Py создаст иконку для вашего приложения из двух файлов в базовой директории игры:

android-icon_foreground.png
    Передний слой иконки. Этот файл должен быть размером 432x432 пикселя и прозрачным.

android-icon_background.png
    Задний слой иконки. Этот файл должен быть размером 432x432 пикселя и непрозрачным.

Адаптивные иконки для Android работают путём наложения двух слоёв иконки на 
область размером как минимум 132x132 пикселя в центре. Область за пределами 
этой безопасной зоны может быть показана, но она может быть также замаскирована. 
Поощряется выход за пределы безопасной зоны. Эти два слоя могут немного двигаться 
относительно друг друга, когда иконка перетаскивается.

Для дополнительной информации о адаптивных иконках, пожалуйста, ознакомьтесь с материалом:

    https://medium.com/google-design/designing-adaptive-icons-515af294c783

Обратите внимание, что 1dp соответствует 4 реальным пикселям.

При генерации приложения Ren'Py конвертирует эти файлы в подходящий размер 
для каждого устройства и создаёт статичные иконки для устройств, которые 
не поддерживают адаптивные иконки.

.. _android-presplash:

Presplash
---------
Presplash показывается до полной загрузки Ren'Py,
до появления основного экрана загрузки. 
Это особенно важно на Android, 
поскольку при первом запуске Ren'Py распаковывает поддерживающие файлы,
что может занять некоторое время.

android-presplash.jpg
    Изображение, которое используется во время загрузки приложения. 
    Оно должно быть окружено 1px одноцветной рамкой. 
    При отображении изображение масштабируется, чтобы соответствовать доступному пространству, 
    сохраняя пропорции, а остальная часть экрана заполняется цветом рамки.

android-downloading.jpg
    Изображение, которое используется, когда приложение загружает 
    ресурсы из Google Play Asset Delivery. 
    Оно должно быть окружено 1px одноцветной рамкой. 
    При отображении изображение масштабируется, чтобы соответствовать доступному пространству, 
    сохраняя пропорции, а остальная часть экрана заполняется цветом рамки.

    Полоска загрузки высотой 20px отображается на расстоянии 20px от нижней, 
    левой и правой сторон экрана, показывая процесс загрузки.

.. _pyjnius:

Pyjnius
=======
При работе на Android доступна версия библиотеки 
`Pyjnius <https://pyjnius.readthedocs.io/en/latest/>`.
Это позволяет опытным пользователям обращаться к библиотекам Android.

Может потребоваться получить основную активность. 
Она находится в поле mActivity класса org.renpy.android.PythonSDLActivity. Например::

    init python:
        if renpy.android:
            import jnius
            mActivity = jnius.autoclass("org.renpy.android.PythonSDLActivity").mActivity
        else:
            mActivity = None

.. _android-permissions:

Разрешения
===========
Хотя Ren'Py не требует дополнительных разрешений для работы, 
если ваша игра использует Pyjnius для обращения к Android, 
может потребоваться запросить разрешения. Ren'Py имеет переменную 
и две функции для взаимодействия с системой разрешений Android.

.. var:: build.android_permissions = [ ]

    Это список строк, каждая из которых даёт полное имя разрешения Android. 
    Например, "android.permission.WRITE_EXTERNAL_STORAGE". 
    Это просто заявляет, что приложение может запросить эти разрешения, 
    но для запроса разрешений необходимо использовать renpy.check_permission 
    и renpy.request_permission по мере необходимости.

.. include:: inc/android_permission
